<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" debug="false">

    <property name="LOG_FILE" value="fix-dma-trading-example.log"/>
    <property name="LOG_PATTERN" value="%d %-5p [%.21t] %logger{1} - %msg%n"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${CONSOLE_LOG_LEVEL:-DEBUG}</level>
        </filter>
    </appender>

    <appender name="rollingFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_FILE}.%i</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>

        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>20MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <immediateFlush>true</immediateFlush>
        </encoder>
    </appender>

    <!-- We should use an async appender, passing on to a rolling file appender -->
    <appender name="async" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="rollingFileAppender"/>
        <queueSize>100000</queueSize>
        <discardingThreshold>10</discardingThreshold>
        <includeCallerData>false</includeCallerData>
    </appender>


    <!-- Use info level for PROD1,PROD2. Debug can be used if needed for all the others. -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="async"/>
    </root>
</configuration>
